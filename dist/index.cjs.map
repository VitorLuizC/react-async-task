{"version":3,"file":"index.cjs","sources":["../src/useAsyncTaskLazy/isAbortError.ts","../src/store/ActionType.ts","../src/store/reducer.ts","../src/store/getInitialState.ts","../src/useAbortController/getAbortController.ts","../src/useMounted/useMounted.ts","../src/useAbortController/useAbortController.ts","../src/useAsyncTaskReducer/useAsyncTaskReducer.ts","../src/useAsyncTaskLazy/useAsyncTaskLazy.ts","../src/useAsyncTask/useAsyncTask.ts"],"sourcesContent":["import type AbortError from './AbortError';\n\nfunction isAbortError(error: unknown): error is AbortError {\n  // The environment doesn't support 'DOMException'.\n  if (typeof DOMException === 'undefined') return false;\n\n  if (error instanceof DOMException) {\n    return error.name === 'AbortError';\n  }\n\n  return false;\n}\n\nexport default isAbortError;\n","enum ActionType {\n  FAILED = 'FAILED',\n  STARTED = 'STARTED',\n  FINISHED = 'FINISHED',\n  SUCCEEDED = 'SUCCEEDED',\n}\n\nexport default ActionType;\n","import ActionType from './ActionType';\nimport type State from './State';\nimport type Action from './Action';\n\nfunction reducer<T>(state: State<T>, action: Action<T>): State<T> {\n  switch (action.type) {\n    case ActionType.STARTED:\n      return {\n        ...state,\n        pendingTasks: state.pendingTasks + 1,\n      };\n    case ActionType.FINISHED:\n      return {\n        ...state,\n        pendingTasks: state.pendingTasks - 1,\n      };\n    case ActionType.FAILED:\n      return {\n        ...state,\n        error: action.error,\n        result: null,\n      };\n    case ActionType.SUCCEEDED:\n      return {\n        ...state,\n        error: null,\n        result: action.result,\n      };\n    default:\n      throw new Error('Invalid action type.');\n  }\n}\n\nexport default reducer;\n","import type State from './State';\n\n/** Get the initial state for the store. */\nfunction getInitialState<T>(): State<T> {\n  return {\n    error: null,\n    result: null,\n    pendingTasks: 0,\n  };\n}\n\nexport default getInitialState;\n","/**\n * Get a new `AbortController` instance if the environment supports it.\n * Otherwise, it returns `null`.\n */\nfunction getAbortController(): AbortController | null {\n  if (typeof AbortController === 'undefined') {\n    return null;\n  }\n\n  return new AbortController();\n}\n\nexport default getAbortController;\n","import { useCallback, useLayoutEffect, useRef } from 'react';\n\n/** React.js hook that provides a function to check if component is mounted. */\nfunction useMounted(): () => boolean {\n  const mountedRef = useRef(true);\n\n  useLayoutEffect(\n    () => () => {\n      mountedRef.current = false;\n    },\n    [],\n  );\n\n  return useCallback(() => mountedRef.current, []);\n}\n\nexport default useMounted;\n","import { useCallback, useLayoutEffect, useState } from 'react';\nimport getAbortController from './getAbortController';\nimport useMounted from '../useMounted';\n\nexport type UseAbortControllerResult = {\n  abort: () => void;\n  signal: AbortSignal | null;\n};\n\n/**\n * React.js hook that provides the `AbortController` signal object and the\n * abort function.\n */\nfunction useAbortController(): UseAbortControllerResult {\n  const mounted = useMounted();\n\n  const [controller, setController] = useState(getAbortController);\n\n  useLayoutEffect(() => () => controller?.abort(), [controller]);\n\n  const abort = useCallback(() => {\n    if (!mounted()) return;\n\n    setController(getAbortController);\n  }, [mounted]);\n\n  return {\n    abort,\n    signal: controller?.signal ?? null,\n  };\n}\n\nexport default useAbortController;\n","import { useCallback, useMemo, useReducer } from 'react';\nimport { Action, getInitialState, reducer, State } from '../store';\nimport useMounted from '../useMounted';\n\nexport type AsyncTaskReducer<Result> = readonly [\n  state: State<Result>,\n  dispatch: (action: Action<Result>) => void,\n];\n\nfunction useAsyncTaskReducer<Result>(): AsyncTaskReducer<Result> {\n  const mounted = useMounted();\n\n  const [state, dispatch] = useReducer(\n    // Prettier doesn't yet support instantiation expressions.\n    // eslint-disable-next-line prettier/prettier\n    reducer<Result>,\n    useMemo(getInitialState<Result>, []),\n  );\n\n  const dispatchOnlyIfMounted = useCallback((action: Action<Result>) => {\n    if (mounted()) {\n      dispatch(action);\n    }\n  }, []);\n\n  return [state, dispatchOnlyIfMounted];\n}\n\nexport default useAsyncTaskReducer;\n","import { useCallback } from 'react';\nimport isAbortError from './isAbortError';\nimport { ActionType } from '../store';\nimport useAbortController from '../useAbortController';\nimport useAsyncTaskReducer from '../useAsyncTaskReducer';\nimport type AsyncTask from '../AsyncTask';\n\nexport type AsyncTaskLazyResult<Result> = Readonly<{\n  error: Error | null;\n  result: Result | null;\n  pending: boolean;\n  executeAsyncTask: (task: AsyncTask<Result>) => Promise<void>;\n}>;\n\nfunction useAsyncTaskLazy<Result>(): AsyncTaskLazyResult<Result> {\n  const { signal } = useAbortController();\n\n  const [state, dispatch] = useAsyncTaskReducer<Result>();\n\n  const executeAsyncTask = useCallback(async (task: AsyncTask<Result>) => {\n    dispatch({ type: ActionType.STARTED });\n\n    try {\n      dispatch({\n        type: ActionType.SUCCEEDED,\n        result: await task({\n          signal: signal ?? undefined,\n        }),\n      });\n    } catch (error) {\n      if (isAbortError(error)) {\n        return;\n      }\n\n      dispatch({ type: ActionType.FAILED, error: error as Error });\n    } finally {\n      dispatch({ type: ActionType.FINISHED });\n    }\n  }, []);\n\n  return {\n    error: state.error,\n    result: state.result,\n    pending: state.pendingTasks > 0,\n    executeAsyncTask,\n  };\n}\n\nexport default useAsyncTaskLazy;\n","import { useLayoutEffect, useRef } from 'react';\nimport useLazyAsyncTask from '../useAsyncTaskLazy';\nimport type AsyncTask from '../AsyncTask';\n\nexport type AsyncTaskResult<Result> = Readonly<{\n  error: Error | null;\n  result: Result | null;\n  pending: boolean;\n}>;\n\nfunction useAsyncTask<Result>(\n  task: AsyncTask<Result>,\n): AsyncTaskResult<Result> {\n  const firstRenderRef = useRef(true);\n\n  const { error, result, pending, executeAsyncTask } =\n    useLazyAsyncTask<Result>();\n\n  useLayoutEffect(() => {\n    firstRenderRef.current = false;\n    executeAsyncTask(task);\n  }, [task, executeAsyncTask]);\n\n  return {\n    error,\n    result,\n    pending: firstRenderRef.current || pending,\n  };\n}\n\nexport default useAsyncTask;\n"],"names":["ActionType","__assign","useRef","useLayoutEffect","useCallback","useState","useReducer","useMemo","__awaiter","useLazyAsyncTask"],"mappings":"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"}