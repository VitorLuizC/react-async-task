{"version":3,"file":"index.iife.min.js","sources":["../src/store/ActionType.ts","../src/store/reducer.ts","../src/store/getInitialState.ts","../src/useAbortController/getAbortController.ts","../src/useMounted/useMounted.ts","../src/useAsyncTaskLazy/useAsyncTaskLazy.ts","../src/useAbortController/useAbortController.ts","../src/useAsyncTaskReducer/useAsyncTaskReducer.ts","../src/useAsyncTaskLazy/isAbortError.ts","../src/useAsyncTask/useAsyncTask.ts"],"sourcesContent":["enum ActionType {\n  FAILED = 'FAILED',\n  STARTED = 'STARTED',\n  FINISHED = 'FINISHED',\n  SUCCEEDED = 'SUCCEEDED',\n}\n\nexport default ActionType;\n","import ActionType from './ActionType';\nimport type State from './State';\nimport type Action from './Action';\n\nfunction reducer<T>(state: State<T>, action: Action<T>): State<T> {\n  switch (action.type) {\n    case ActionType.STARTED:\n      return {\n        ...state,\n        pendingTasks: state.pendingTasks + 1,\n      };\n    case ActionType.FINISHED:\n      return {\n        ...state,\n        pendingTasks: state.pendingTasks - 1,\n      };\n    case ActionType.FAILED:\n      return {\n        ...state,\n        error: action.error,\n        result: null,\n      };\n    case ActionType.SUCCEEDED:\n      return {\n        ...state,\n        error: null,\n        result: action.result,\n      };\n    default:\n      throw new Error('Invalid action type.');\n  }\n}\n\nexport default reducer;\n","import type State from './State';\n\n/** Get the initial state for the store. */\nfunction getInitialState<T>(): State<T> {\n  return {\n    error: null,\n    result: null,\n    pendingTasks: 0,\n  };\n}\n\nexport default getInitialState;\n","/**\n * Get a new `AbortController` instance if the environment supports it.\n * Otherwise, it returns `null`.\n */\nfunction getAbortController(): AbortController | null {\n  if (typeof AbortController === 'undefined') {\n    return null;\n  }\n\n  return new AbortController();\n}\n\nexport default getAbortController;\n","import { useCallback, useLayoutEffect, useRef } from 'react';\n\n/** React.js hook that provides a function to check if component is mounted. */\nfunction useMounted(): () => boolean {\n  const mountedRef = useRef(true);\n\n  useLayoutEffect(\n    () => () => {\n      mountedRef.current = false;\n    },\n    [],\n  );\n\n  return useCallback(() => mountedRef.current, []);\n}\n\nexport default useMounted;\n","import { useCallback } from 'react';\nimport isAbortError from './isAbortError';\nimport { ActionType } from '../store';\nimport useAbortController from '../useAbortController';\nimport useAsyncTaskReducer from '../useAsyncTaskReducer';\nimport type AsyncTask from '../AsyncTask';\n\nexport type AsyncTaskLazyResult<Result> = Readonly<{\n  error: Error | null;\n  result: Result | null;\n  pending: boolean;\n  executeAsyncTask: (task: AsyncTask<Result>) => Promise<void>;\n}>;\n\nfunction useAsyncTaskLazy<Result>(): AsyncTaskLazyResult<Result> {\n  const { signal } = useAbortController();\n\n  const [state, dispatch] = useAsyncTaskReducer<Result>();\n\n  const executeAsyncTask = useCallback(async (task: AsyncTask<Result>) => {\n    dispatch({ type: ActionType.STARTED });\n\n    try {\n      dispatch({\n        type: ActionType.SUCCEEDED,\n        result: await task({\n          signal: signal ?? undefined,\n        }),\n      });\n    } catch (error) {\n      if (isAbortError(error)) {\n        return;\n      }\n\n      dispatch({ type: ActionType.FAILED, error: error as Error });\n    } finally {\n      dispatch({ type: ActionType.FINISHED });\n    }\n  }, []);\n\n  return {\n    error: state.error,\n    result: state.result,\n    pending: state.pendingTasks > 0,\n    executeAsyncTask,\n  };\n}\n\nexport default useAsyncTaskLazy;\n","import { useCallback, useLayoutEffect, useState } from 'react';\nimport getAbortController from './getAbortController';\nimport useMounted from '../useMounted';\n\nexport type UseAbortControllerResult = {\n  abort: () => void;\n  signal: AbortSignal | null;\n};\n\n/**\n * React.js hook that provides the `AbortController` signal object and the\n * abort function.\n */\nfunction useAbortController(): UseAbortControllerResult {\n  const mounted = useMounted();\n\n  const [controller, setController] = useState(getAbortController);\n\n  useLayoutEffect(() => () => controller?.abort(), [controller]);\n\n  const abort = useCallback(() => {\n    if (!mounted()) return;\n\n    setController(getAbortController);\n  }, [mounted]);\n\n  return {\n    abort,\n    signal: controller?.signal ?? null,\n  };\n}\n\nexport default useAbortController;\n","import { useCallback, useMemo, useReducer } from 'react';\nimport { Action, getInitialState, reducer, State } from '../store';\nimport useMounted from '../useMounted';\n\nexport type AsyncTaskReducer<Result> = readonly [\n  state: State<Result>,\n  dispatch: (action: Action<Result>) => void,\n];\n\nfunction useAsyncTaskReducer<Result>(): AsyncTaskReducer<Result> {\n  const mounted = useMounted();\n\n  const [state, dispatch] = useReducer(\n    // Prettier doesn't yet support instantiation expressions.\n    // eslint-disable-next-line prettier/prettier\n    reducer<Result>,\n    useMemo(getInitialState<Result>, []),\n  );\n\n  const dispatchOnlyIfMounted = useCallback((action: Action<Result>) => {\n    if (mounted()) {\n      dispatch(action);\n    }\n  }, []);\n\n  return [state, dispatchOnlyIfMounted];\n}\n\nexport default useAsyncTaskReducer;\n","import type AbortError from './AbortError';\n\nfunction isAbortError(error: unknown): error is AbortError {\n  // The environment doesn't support 'DOMException'.\n  if (typeof DOMException === 'undefined') return false;\n\n  if (error instanceof DOMException) {\n    return error.name === 'AbortError';\n  }\n\n  return false;\n}\n\nexport default isAbortError;\n","import { useLayoutEffect, useRef } from 'react';\nimport useLazyAsyncTask from '../useAsyncTaskLazy';\nimport type AsyncTask from '../AsyncTask';\n\nexport type AsyncTaskResult<Result> = Readonly<{\n  error: Error | null;\n  result: Result | null;\n  pending: boolean;\n}>;\n\nfunction useAsyncTask<Result>(\n  task: AsyncTask<Result>,\n): AsyncTaskResult<Result> {\n  const firstRenderRef = useRef(true);\n\n  const { error, result, pending, executeAsyncTask } =\n    useLazyAsyncTask<Result>();\n\n  useLayoutEffect(() => {\n    firstRenderRef.current = false;\n    executeAsyncTask(task);\n  }, [task, executeAsyncTask]);\n\n  return {\n    error,\n    result,\n    pending: firstRenderRef.current || pending,\n  };\n}\n\nexport default useAsyncTask;\n"],"names":["ActionType","ActionType$1","reducer","state","action","type","STARTED","__assign","pendingTasks","FINISHED","FAILED","error","result","SUCCEEDED","Error","getInitialState","getAbortController","AbortController","useMounted","mountedRef","useRef","useLayoutEffect","current","useCallback","useAsyncTaskLazy","_this","this","signal","mounted","_b","useState","controller","setController","abort","_a","useAbortController","useReducer","useMemo","dispatch","useAsyncTaskReducer","executeAsyncTask","task","__awaiter","undefined","apply","_c","sent","error_1","DOMException","name","pending","firstRenderRef","useLazyAsyncTask"],"mappings":"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"}